<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tech.whale.message.dao.MessageDao">

	<select id="getNextRoomId" resultType="String">
		SELECT MESSAGE_ROOM_SEQ.NEXTVAL FROM DUAL
	</select>

	<insert id="createMessageRoom">
	    INSERT INTO message_room (message_room_id) VALUES (#{roomId})
	</insert>

	<select id="getAllRoom" resultType="com.tech.whale.message.dto.MessageDto">
		SELECT mr.message_room_id
		FROM message_room mr
		JOIN message_room_user mru1 ON mr.message_room_id = mru1.message_room_id
		JOIN message_room_user mru2 ON mr.message_room_id = mru2.message_room_id
		WHERE mru1.user_id = #{now_id}
		  AND mru2.user_id = #{userId}
	</select>
	
	<insert id="addUserMessageRoom">
	    INSERT INTO message_room_user (message_room_id, user_id)
	    VALUES (#{roomId}, #{userId})
	</insert>
	    
	<update id="readMessage">
		UPDATE MESSAGE
		SET MESSAGE_READ = 0
		WHERE MESSAGE_ROOM_ID = #{roomId} AND USER_ID = #{userId}
	</update>
	    
	    
    <insert id="saveMessage">
	    INSERT INTO message (message_id, message_create_date, message_text, message_room_id, message_read, user_id)
	    VALUES (MESSAGE_SEQ.NEXTVAL, #{message_create_date}, #{message_text}, #{message_room_id}, 1, #{user_id})
	</insert>
	
	<select id="getMessagesByRoomId" resultType="com.tech.whale.message.dto.MessageDto">
	    SELECT message_id, message_create_date, message_text, message_room_id, message_read, user_id
	    FROM message
	    WHERE message_room_id = #{roomId}
	    ORDER BY message_create_date ASC
	</select>

	<select id="getFollowList" resultType="com.tech.whale.message.dto.FollowListDto">
		<![CDATA[
		SELECT
			UI.USER_ID AS FOLLOW_USER_ID,
			UI.USER_NICKNAME AS FOLLOW_USER_NICKNAME,
			UI.USER_IMAGE_URL AS FOLLOW_USER_IMAGE_URL
		FROM (
				 SELECT REGEXP_SUBSTR(FOLLOW_USER_ID, '[^,]+', 1, LEVEL) AS FOLLOW_USER_ID
				 FROM (
						  SELECT FOLLOW_USER_ID
						  FROM FOLLOW
						  WHERE USER_ID = #{now_id}
					  )
					 CONNECT BY LEVEL <= LENGTH(FOLLOW_USER_ID)
		- LENGTH(REPLACE(FOLLOW_USER_ID, ',', '')) + 1
			 ) B
				 JOIN USER_INFO UI
					  ON B.FOLLOW_USER_ID = UI.USER_ID
		]]>
	</select>

	<select id="getAllChatList" resultType="com.tech.whale.message.dto.AllChatListDto">
		SELECT
		U.USER_ID,
		U.USER_NICKNAME,
		U.USER_IMAGE_URL,
		M.MESSAGE_READ,
		MAX(M.MESSAGE_TEXT) KEEP (DENSE_RANK LAST ORDER BY M.MESSAGE_CREATE_DATE) AS LAST_MESSAGE_TEXT
		FROM
		MESSAGE M
		JOIN
		MESSAGE_ROOM MR ON M.MESSAGE_ROOM_ID = MR.MESSAGE_ROOM_ID
		JOIN
		MESSAGE_ROOM_USER MRU ON MR.MESSAGE_ROOM_ID = MRU.MESSAGE_ROOM_ID
		JOIN
		USER_INFO U ON MRU.USER_ID = U.USER_ID
		WHERE
		MRU.USER_ID != #{now_id}   -- 현재 사용자를 제외
		AND MR.MESSAGE_ROOM_ID IN (SELECT MESSAGE_ROOM_ID FROM MESSAGE_ROOM_USER WHERE USER_ID = #{now_id})
		GROUP BY
		U.USER_ID,
		U.USER_NICKNAME,
		U.USER_IMAGE_URL,
		M.MESSAGE_READ
		ORDER BY
		MAX(M.MESSAGE_CREATE_DATE) DESC
	</select>
	<select id="getReadChatList" resultType="com.tech.whale.message.dto.ReadChatDto">
		SELECT
		U.USER_ID,
		ROUND((SYSDATE - MAX(M.MESSAGE_CREATE_DATE)) * 24 * 60) AS MINUTES_SINCE_LAST_MESSAGE,
		COUNT(M.MESSAGE_ID) AS UNREAD_MESSAGE_COUNT,
		MAX(M.MESSAGE_TEXT) KEEP (DENSE_RANK LAST ORDER BY M.MESSAGE_CREATE_DATE) AS LAST_MESSAGE_TEXT
		FROM
		MESSAGE M
		JOIN
		MESSAGE_ROOM MR ON M.MESSAGE_ROOM_ID = MR.MESSAGE_ROOM_ID
		JOIN
		MESSAGE_ROOM_USER MRU ON MR.MESSAGE_ROOM_ID = MRU.MESSAGE_ROOM_ID
		JOIN
		USER_INFO U ON MRU.USER_ID = U.USER_ID
		WHERE
		MRU.USER_ID != #{now_id}   -- 현재 사용자를 제외
		AND MR.MESSAGE_ROOM_ID IN (SELECT MESSAGE_ROOM_ID FROM MESSAGE_ROOM_USER WHERE USER_ID = #{now_id})
		GROUP BY
		U.USER_ID
		ORDER BY
		MAX(M.MESSAGE_CREATE_DATE) DESC
	</select>
	    
</mapper>