<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tech.whale.message.dao.MessageDao">

	<select id="getNextRoomId" resultType="String">
		SELECT MESSAGE_ROOM_SEQ.NEXTVAL FROM DUAL
	</select>

	<insert id="createMessageRoom">
	    INSERT INTO message_room (message_room_id) VALUES (#{roomId})
	</insert>

	<select id="getAllRoom" resultType="com.tech.whale.message.dto.MessageDto">
	    SELECT mru1.message_room_id
	    FROM message_room_user mru1
	    JOIN message_room_user mru2 ON mru1.message_room_id = mru2.message_room_id
	    WHERE mru1.user_id = #{now_id}
	    AND mru2.user_id = #{userId}
	</select>
	
	<insert id="addUserMessageRoom">
	    INSERT INTO message_room_user (message_room_id, user_id, user_type)
	    VALUES (#{roomId}, #{userId}, #{string})
	</insert>
	    
	<select id="getUnreadMessageIds" parameterType="map" resultType="int">
	    SELECT MESSAGE_ID
	    FROM MESSAGE
	    WHERE MESSAGE_ROOM_ID = #{roomId}
	      AND USER_ID = #{userId}
	      AND MESSAGE_READ = 1
	</select>
	
	<update id="updateMessageReadStatus" parameterType="map">
	    UPDATE MESSAGE
	    SET MESSAGE_READ = 0
	    WHERE MESSAGE_ROOM_ID = #{roomId}
	      AND USER_ID = #{userId}
	      AND MESSAGE_READ = 1
	</update>
	
	<select id="getNextMessageId" resultType="int">
		SELECT MESSAGE_SEQ.NEXTVAL FROM DUAL
	</select>    
	
	<insert id="saveMessage">
	    INSERT INTO message (message_id, message_create_date, message_text, message_room_id, message_read, user_id, message_type)
	    VALUES (#{message_id}, #{message_create_date}, #{message_text}, #{message_room_id}, #{message_read}, #{user_id}, #{message_type})
	</insert>
	
	<select id="getUserImage" resultType="String">
		SELECT USER_IMAGE_URL FROM USER_INFO
		WHERE USER_ID = #{userId}
	</select>
	
	<select id="getMessagesByRoomId" resultType="com.tech.whale.message.dto.MessageDto">
	    SELECT message_id, message_create_date, message_text, message_room_id, message_read, user_id, message_type
	    FROM message
	    WHERE message_room_id = #{roomId}
	    ORDER BY message_create_date ASC
	</select>
	
	<select id="findPostUser" resultType="String">
		SELECT USER_ID FROM POST WHERE POST_ID = #{post_id}
	</select>
	
	<select id="findFeedUser" resultType="String">
		SELECT USER_ID FROM FEED WHERE FEED_ID = #{feed_id}
	</select>
	
	<select id="getOtherUserInRoom" resultType="String">
	    SELECT mru.user_id
	    FROM message_room_user mru
	    JOIN message_room mr ON mr.message_room_id = mru.message_room_id
	    WHERE mru.message_room_id = #{roomId}
	      AND mru.user_id = #{userId}
	</select>
	
	<select id="getLinkUser" resultType="com.tech.whale.message.dto.LinkMessageDto">
		SELECT user_id, user_nickname, user_image_url FROM USER_INFO
		WHERE USER_ID = #{user_id}
	</select>
	
	
	<select id="getOtherUserInRoom2" resultType="String">
	    SELECT mru.user_id
	    FROM message_room_user mru
	    JOIN message_room mr ON mr.message_room_id = mru.message_room_id
	    WHERE mru.message_room_id = #{roomId}
	      AND mru.user_id != #{userId}
	</select>

	<select id="getFollowList" resultType="com.tech.whale.message.dto.FollowListDto">
		<![CDATA[
		-- minji를 팔로우하는 사람들 목록(팔로워)
		SELECT
			UI.USER_ID AS FOLLOW_USER_ID,
			UI.USER_NICKNAME AS FOLLOW_USER_NICKNAME,
			UI.USER_IMAGE_URL AS FOLLOW_USER_IMAGE_URL
		FROM (
				 SELECT REGEXP_SUBSTR(FOLLOW_USER_ID, '[^,]+', 1, LEVEL) AS FOLLOW_USER_ID
				 FROM (
						  SELECT FOLLOW_USER_ID
						  FROM FOLLOW
						  WHERE USER_ID = #{now_id}
					  )
					 CONNECT BY LEVEL <= LENGTH(FOLLOW_USER_ID)
                                 - LENGTH(REPLACE(FOLLOW_USER_ID, ',', '')) + 1
			 ) B
				 JOIN USER_INFO UI ON B.FOLLOW_USER_ID = UI.USER_ID
		UNION
		-- minji가 팔로우하는 사람들 목록(팔로잉)
		SELECT
			UI.USER_ID AS FOLLOW_USER_ID,
			UI.USER_NICKNAME AS FOLLOW_USER_NICKNAME,
			UI.USER_IMAGE_URL AS FOLLOW_USER_IMAGE_URL
		FROM (
				 SELECT REGEXP_SUBSTR(USER_ID, '[^,]+', 1, LEVEL) AS FOLLOW_USER_ID
				 FROM FOLLOW
				 WHERE FOLLOW_USER_ID LIKE '%' || #{now_id} || '%'
					 CONNECT BY LEVEL <= LENGTH(FOLLOW_USER_ID) - LENGTH(REPLACE(FOLLOW_USER_ID, ',', '')) + 1
                AND ROWNUM = 1
			 ) A
				 JOIN USER_INFO UI ON A.FOLLOW_USER_ID = UI.USER_ID
		]]>
	</select>

	<select id="getAllChatList" resultType="com.tech.whale.message.dto.AllChatListDto">
		SELECT
			U.USER_ID,
			U.USER_NICKNAME,
			U.USER_IMAGE_URL,
			MR.MESSAGE_ROOM_ID,
			MAX(M.MESSAGE_READ) KEEP (DENSE_RANK LAST ORDER BY M.MESSAGE_CREATE_DATE) AS LAST_MESSAGE_READ,
				MAX(M.MESSAGE_TEXT) KEEP (DENSE_RANK LAST ORDER BY M.MESSAGE_CREATE_DATE) AS LAST_MESSAGE_TEXT,
				MAX(M.MESSAGE_CREATE_DATE) KEEP (DENSE_RANK LAST ORDER BY M.MESSAGE_CREATE_DATE) AS LAST_MESSAGE_CREATE_DATE,
				MAX(M.USER_ID) KEEP (DENSE_RANK LAST ORDER BY M.MESSAGE_CREATE_DATE) AS LAST_MESSAGE_SENDER_ID,
				MAX(M.MESSAGE_TYPE) KEEP (DENSE_RANK LAST ORDER BY M.MESSAGE_CREATE_DATE) AS LAST_MESSAGE_TYPE  -- 마지막 메시지 타입 추가
		FROM
			MESSAGE M
				JOIN MESSAGE_ROOM MR ON M.MESSAGE_ROOM_ID = MR.MESSAGE_ROOM_ID
				JOIN MESSAGE_ROOM_USER MRU ON MR.MESSAGE_ROOM_ID = MRU.MESSAGE_ROOM_ID
				JOIN USER_INFO U ON MRU.USER_ID = U.USER_ID
		WHERE
			MRU.USER_ID != #{now_id}  -- 현재 사용자를 제외
  AND MR.MESSAGE_ROOM_ID IN (SELECT MESSAGE_ROOM_ID FROM MESSAGE_ROOM_USER WHERE USER_ID = #{now_id})
		GROUP BY
			U.USER_ID,
			U.USER_NICKNAME,
			U.USER_IMAGE_URL,
			MR.MESSAGE_ROOM_ID
		ORDER BY
			MAX(M.MESSAGE_CREATE_DATE) DESC
	</select>
	<select id="getReadChatList" resultType="com.tech.whale.message.dto.ReadChatDto">
		SELECT
		U.USER_ID,
		ROUND((SYSDATE - MAX(M.MESSAGE_CREATE_DATE)) * 24 * 60) AS MINUTES_SINCE_LAST_MESSAGE,
		COUNT(M.MESSAGE_ID) AS UNREAD_MESSAGE_COUNT,
		MAX(M.MESSAGE_TEXT) KEEP (DENSE_RANK LAST ORDER BY M.MESSAGE_CREATE_DATE) AS LAST_MESSAGE_TEXT
		FROM
		MESSAGE M
		JOIN
		MESSAGE_ROOM MR ON M.MESSAGE_ROOM_ID = MR.MESSAGE_ROOM_ID
		JOIN
		MESSAGE_ROOM_USER MRU ON MR.MESSAGE_ROOM_ID = MRU.MESSAGE_ROOM_ID
		JOIN
		USER_INFO U ON MRU.USER_ID = U.USER_ID
		WHERE
		M.MESSAGE_READ = 1           -- 읽지 않은 메시지
		AND MRU.USER_ID != #{now_id}   -- 현재 사용자를 제외
		AND MR.MESSAGE_ROOM_ID IN (SELECT MESSAGE_ROOM_ID FROM MESSAGE_ROOM_USER WHERE USER_ID = #{now_id})
		GROUP BY
		U.USER_ID
		ORDER BY
		MAX(M.MESSAGE_CREATE_DATE) DESC
	</select>
	
	<select id="getMessageById" parameterType="int" resultType="com.tech.whale.message.dto.MessageDto">
	    SELECT * FROM message WHERE message_id = #{messageId}
	</select>
	
	<delete id="deleteMessage" parameterType="int">
	    DELETE FROM message WHERE message_id = #{messageId}
	</delete>

	<select id="getUserType" parameterType="String" resultType="String">
		SELECT USER_TYPE FROM MESSAGE_ROOM_USER WHERE USER_ID = #{now_id} AND MESSAGE_ROOM_ID = #{currentMessageRoomId}
	</select>

	<update id="updateUserTypeA">
		UPDATE MESSAGE SET A = 1 WHERE MESSAGE_ROOM_ID = #{message_room_id}
	</update>

	<update id="updateUserTypeB">
		UPDATE MESSAGE SET B = 1 WHERE MESSAGE_ROOM_ID = #{message_room_id}
	</update>

	
</mapper>