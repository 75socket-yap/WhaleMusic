<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tech.whale.community.dao.ComDao">
	
    <select id="getComAll" resultType="com.tech.whale.community.dto.CommunityDto">
        SELECT * FROM COMMUNITY
    </select>
    
    <select id="getCommunityName" resultType="java.lang.String">
        SELECT COMMUNITY_NAME_EN FROM COMMUNITY WHERE COMMUNITY_ID = #{param1}
    </select>
    
    <select id="chooseTag" resultType="com.tech.whale.community.dto.PostDto">
        SELECT POST_TAG_ID, POST_TAG_TEXT FROM POST_TAG
    </select>
    
	<sql id="includeCount">
	    <choose>
	        <when test="param2 == 1">
	            AND POST_TITLE LIKE '%' || #{param1} || '%'
	        </when>
	        <when test="param2 == 2">
	            AND POST_TEXT LIKE '%' || #{param1} || '%'
	        </when>
	        <when test="param2 == 3">
	            AND (POST_TITLE LIKE '%' || #{param1} || '%' OR POST_TEXT LIKE '%' || #{param1} || '%')
	        </when>
	    </choose>
	</sql>
	
	<sql id="includeList">
	    <choose>
	        <when test="param4 == 1">
	            AND p.POST_TITLE LIKE '%' || #{param3} || '%'
	        </when>
	        <when test="param4 == 2">
	            AND p.POST_TEXT LIKE '%' || #{param3} || '%'
	        </when>
	        <when test="param4 == 3">
	            AND (p.POST_TITLE LIKE '%' || #{param3} || '%' OR p.POST_TEXT LIKE '%' || #{param3} || '%')
	        </when>
	    </choose>
	</sql>
	
	<select id="getPostAll" resultType="com.tech.whale.community.dto.PostDto">
	    SELECT p.POST_ID, p.COMMUNITY_ID, p.USER_ID, p.POST_TITLE, p.POST_TEXT, 
	           TO_CHAR(p.POST_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분"', 'NLS_DATE_LANGUAGE = KOREAN') AS POST_DATE, 
	           p.POST_URL, p.POST_CNT, p.POST_NUM, p.POST_TAG_ID, p.POST_TAG_TEXT,
	           p.USER_NICKNAME, p.USER_IMAGE_URL  -- 하위 쿼리에서 미리 포함된 유저 정보
	    FROM (
	        SELECT p.POST_ID, p.COMMUNITY_ID, p.USER_ID, p.POST_TITLE, p.POST_TEXT, 
	               p.POST_DATE,  -- 원래의 날짜 타입 사용
	               p.POST_URL, p.POST_CNT, p.POST_NUM, p.POST_TAG_ID, t.POST_TAG_TEXT,
	               u.USER_NICKNAME, u.USER_IMAGE_URL,  -- 유저 정보 추가
	               ROW_NUMBER() OVER(ORDER BY p.POST_ID DESC) AS POST_SEQ
	        FROM POST p
	        JOIN POST_TAG t ON p.POST_TAG_ID = t.POST_TAG_ID
	        JOIN USER_INFO u ON p.USER_ID = u.USER_ID  -- 유저 정보와 조인
	        WHERE p.COMMUNITY_ID = #{param5}
	        <include refid="includeList" />
	        <if test="param6 != null and param6 != -1">
	            AND p.POST_TAG_ID = #{param6}
	        </if>
	    ) p
	    WHERE POST_SEQ BETWEEN #{param1} AND #{param2}
	</select>
    
    <select id="selectBoardCount" resultType="Integer">
        SELECT COUNT(*) FROM POST 
        WHERE COMMUNITY_ID = #{param3}
        <include refid="includeCount" />
        <if test="param4 != null and param4 != -1">
            AND POST_TAG_ID = #{param4}
        </if>
    </select>
    
    <resultMap id="PostResultMap" type="com.tech.whale.community.dto.PostDto">
	    <id property="post_id" column="POST_ID"/>
	    <result property="user_id" column="USER_ID"/>
	    <result property="post_text" column="POST_TEXT"/>
	    <result property="post_date" column="POST_DATE"/>
	    <result property="post_cnt" column="POST_CNT"/>
	    <result property="post_title" column="POST_TITLE"/>
	    <result property="post_tag_text" column="POST_TAG_TEXT"/>
	    
	    <!-- 이미지 정보를 위한 collection 설정 -->
	    <collection property="images" ofType="com.tech.whale.community.dto.PostImgDto">
	        <id property="post_img_id" column="POST_IMG_ID"/>
	        <result property="post_img_url" column="POST_IMG_URL"/>
	        <result property="post_img_name" column="POST_IMG_NAME"/>
	        <result property="post_img_type" column="POST_IMG_TYPE"/>
	    </collection>
	</resultMap>
    
	<select id="getPost" resultMap="PostResultMap">
	    SELECT P.POST_ID, 
	           P.USER_ID, 
	           P.POST_TEXT, 
	           TO_CHAR(P.POST_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분"', 'NLS_DATE_LANGUAGE = KOREAN') AS POST_DATE, 
	           P.POST_CNT, 
	           P.POST_TITLE, 
	           T.POST_TAG_TEXT,
	           I.POST_IMG_ID, -- 이미지 ID 추가
	           I.POST_IMG_URL, -- 이미지 경로
	           I.POST_IMG_NAME, -- 이미지 이름
	           I.POST_IMG_TYPE -- 이미지 타입
	    FROM POST P 
	    JOIN POST_TAG T ON P.POST_TAG_ID = T.POST_TAG_ID
	    LEFT JOIN POST_IMG I ON P.POST_ID = I.POST_ID -- 이미지 경로를 위한 LEFT JOIN
	    WHERE P.POST_ID = #{param1}
	</select>
	
    <update id="upCnt">
		UPDATE POST SET POST_CNT = POST_CNT + 1 WHERE POST_ID = #{param1}
	</update>
    
    
    <!-- 특정 사용자가 해당 게시글에 좋아요를 눌렀는지 확인 -->
    <select id="checkUserLikedPost" resultType="int">
        SELECT COUNT(*) 
        FROM post_like
        WHERE post_id = #{postId} AND user_id = #{userId}
    </select>

    <!-- 좋아요 추가 -->
    <insert id="insertLike">
        INSERT INTO post_like (post_like_id, post_id, user_id)
        VALUES (POST_LIKE_SEQ.NEXTVAL, #{postId}, #{userId})
    </insert>

    <!-- 좋아요 취소 -->
    <delete id="deleteLike">
        DELETE FROM post_like 
        WHERE post_id = #{postId} AND user_id = #{userId}
    </delete>

    <!-- 게시글의 총 좋아요 수 가져오기 -->
    <select id="getLikeCount" resultType="int">
        SELECT COUNT(*) 
        FROM post_like
        WHERE post_id = #{postId}
    </select>
    
    <insert id="insertComments">
    	INSERT INTO post_comments (post_comments_id, post_id, user_id, post_comments_text, post_comments_date)
    	VALUES (POST_COMMENTS_SEQ.NEXTVAL, #{postId}, #{userId}, #{comments}, SYSDATE)
    </insert>
    
    <delete id="deleteComments">
    	DELETE FROM post_comments
    	WHERE post_comments_id = #{postCommentsId}
    </delete>
    
    <select id="getComments" resultType="com.tech.whale.community.dto.CommentDto">
		SELECT post_comments_id, user_id, post_comments_text, 
		TO_CHAR(post_comments_date, 'YYYY"년" MM"월" DD"일" HH24"시 "MI"분"', 'NLS_DATE_LANGUAGE = KOREAN') AS post_comments_date
		FROM post_comments
		WHERE post_id = #{postId}
		ORDER BY post_comments_date ASC
    </select>
    
        <!-- 게시글 등록 쿼리 -->
	<select id="getNextPostId" resultType="int">
	    SELECT POST_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<insert id="insertPost">
	    INSERT INTO POST (POST_ID, COMMUNITY_ID, USER_ID, POST_TITLE, POST_TEXT, POST_NUM, POST_DATE, POST_TAG_ID, POST_CNT)
	    VALUES (#{post_id}, #{community_id}, #{user_id}, #{post_title}, #{post_text},
	            (SELECT NVL(MAX(POST_NUM), 0) + 1 FROM POST WHERE COMMUNITY_ID = #{community_id}), -- POST_NUM 계산
	            SYSDATE, #{post_tag_id}, 0)
	</insert>

    <!-- 이미지 정보 등록 쿼리 -->
	<insert id="insertImage" parameterType="com.tech.whale.community.dto.PostImgDto">
	    INSERT INTO POST_IMG (POST_IMG_ID, POST_ID, POST_IMG_URL, POST_IMG_TYPE, POST_IMG_NAME)
	    VALUES (POST_IMG_SEQ.NEXTVAL, #{post_id}, #{post_img_url}, #{post_img_type}, #{post_img_name})
	</insert>
	
	<select id="getPostNumById" resultType="String">
	    SELECT POST_NUM FROM POST WHERE POST_ID = #{param1}
	</select>
	
	<delete id="deletePost">
		DELETE FROM POST WHERE POST_ID = #{param1}
	</delete>
	
	<update id="updatePostNumsAfterDeletion">
	    UPDATE POST
	    SET POST_NUM = POST_NUM - 1
	    WHERE COMMUNITY_ID = #{communityId} 
	    AND POST_NUM > #{postNum}
	</update>
    
    <delete id="deletePostImage" parameterType="int">
	    DELETE FROM POST_IMG WHERE POST_IMG_ID = #{imageId}
	</delete>
    
    <update id="updatePost" parameterType="com.tech.whale.community.dto.PostDto">
        UPDATE POST
        SET post_tag_id = #{post_tag_id},
            post_title = #{post_title},
            post_text = #{post_text}
        WHERE post_id = #{post_id}
    </update>
    
</mapper>