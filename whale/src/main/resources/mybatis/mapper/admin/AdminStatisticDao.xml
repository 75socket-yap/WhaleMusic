<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tech.whale.admin.dao.AdminStatisticIDao">
	
	<select id="reportStatistic1" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH LABEL AS (
		    SELECT 'FEED' AS LABEL FROM DUAL UNION ALL
		    SELECT 'FEED_COMMENT' FROM DUAL UNION ALL
		    SELECT 'POST' FROM DUAL UNION ALL
		    SELECT 'POST_COMMENT' FROM DUAL UNION ALL
		    SELECT 'MESSAGE' FROM DUAL
		)
		SELECT 
		    RT.LABEL,
		    COUNT(CASE 
		        WHEN RT.LABEL = 'FEED' AND R.FEED_ID IS NOT NULL THEN 1
		        WHEN RT.LABEL = 'FEED_COMMENT' AND R.FEED_COMMENT_ID IS NOT NULL THEN 1
		        WHEN RT.LABEL = 'POST' AND R.POST_ID IS NOT NULL THEN 1
		        WHEN RT.LABEL = 'POST_COMMENT' AND R.POST_COMMENT_ID IS NOT NULL THEN 1
		        WHEN RT.LABEL = 'MESSAGE' AND R.MESSAGE_ID IS NOT NULL THEN 1
		        ELSE NULL
		    END) AS VALUE
		FROM LABEL RT
		LEFT JOIN REPORT R ON 1=1
		GROUP BY RT.LABEL
		ORDER BY RT.LABEL
	</select>
	<select id="reportStatistic2" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS (
		    SELECT TRUNC(SYSDATE) - LEVEL + 1 AS TARGET_DATE
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 30
		)
		SELECT 
		    TO_CHAR(DR.TARGET_DATE, 'MM.DD') AS label,
		    NVL((SELECT COUNT(*) FROM REPORT WHERE TRUNC(REPORT_DATE) = DR.TARGET_DATE), 0) AS value
		FROM DATE_RANGE DR
		ORDER BY DR.TARGET_DATE
	</select>
	<select id="reportStatistic3" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		SELECT RANGES.LABEL, NVL(COUNTS.VALUE, 0) AS VALUE
		FROM (
		    SELECT '1일이내' AS LABEL FROM DUAL
		    UNION ALL
		    SELECT '2-3일' FROM DUAL
		    UNION ALL
		    SELECT '3일초과' FROM DUAL
		) RANGES
		LEFT JOIN (
		    SELECT 
		        CASE 
		            WHEN (REPORT_RESULT.REPORT_RESULT_DATE - REPORT.REPORT_DATE) * 24 &lt;= 24 THEN '1일이내'
		            WHEN (REPORT_RESULT.REPORT_RESULT_DATE - REPORT.REPORT_DATE) * 24 &gt; 24 
		                 AND (REPORT_RESULT.REPORT_RESULT_DATE - REPORT.REPORT_DATE) * 24 &lt;= 72 THEN '2-3일'
		            ELSE '3일초과'
		        END AS LABEL,
		        COUNT(*) AS VALUE
		    FROM 
		        REPORT_RESULT
		    JOIN 
		        REPORT ON REPORT_RESULT.REPORT_ID = REPORT.REPORT_ID
		    WHERE 
		        REPORT_RESULT.REPORT_RESULT_DATE IS NOT NULL 
		        AND REPORT.REPORT_DATE IS NOT NULL
		    GROUP BY 
		        CASE 
		            WHEN (REPORT_RESULT.REPORT_RESULT_DATE - REPORT.REPORT_DATE) * 24 &lt;= 24 THEN '1일이내'
		            WHEN (REPORT_RESULT.REPORT_RESULT_DATE - REPORT.REPORT_DATE) * 24 &gt; 24 
		                 AND (REPORT_RESULT.REPORT_RESULT_DATE - REPORT.REPORT_DATE) * 24 &lt;= 72 THEN '2-3일'
		            ELSE '3일초과'
		        END
		) COUNTS ON RANGES.LABEL = COUNTS.LABEL
		ORDER BY RANGES.LABEL
	</select>
	<select id="userStatistic1" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT TRUNC(SYSDATE) - LEVEL + 1 AS TARGET_DATE
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 30
		)
		SELECT
		    TO_CHAR(DR.TARGET_DATE, 'MM.DD') AS LABEL,
		    NVL((SELECT COUNT(*) FROM USER_INFO WHERE TRUNC(USER_DATE) = DR.TARGET_DATE),0) AS VALUE
		FROM DATE_RANGE DR
		ORDER BY DR.TARGET_DATE
	</select>
	<select id="userStatistic2" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGES AS (
		    SELECT MIN(USER_DATE) AS FIRST_DATE, TRUNC(SYSDATE) AS LAST_DATE
		    FROM USER_INFO
		),
		INTERVALS AS (
		    SELECT 
		        FIRST_DATE + ((LEVEL - 1) * (LAST_DATE - FIRST_DATE) / 29) AS PERIOD_END
		    FROM DATE_RANGES
		    CONNECT BY LEVEL &lt;= 30
		)
		SELECT 
		    TO_CHAR(PERIOD_END, 'MM.DD') AS LABEL,
		    (SELECT COUNT(*) FROM USER_INFO WHERE USER_DATE &lt;= PERIOD_END) AS VALUE
		FROM INTERVALS
	</select>
	<select id="cfStatistic1" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT TRUNC(SYSDATE) - LEVEL + 1 AS TARGET_DATE
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 30
		)
		SELECT
		    TO_CHAR(DR.TARGET_DATE, 'MM.DD') AS LABEL,
		    NVL((SELECT COUNT(*) FROM POST WHERE TRUNC(POST_DATE) = DR.TARGET_DATE),0) AS VALUE
		FROM DATE_RANGE DR
		ORDER BY DR.TARGET_DATE
	</select>
	<select id="cfStatistic2" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT MIN(POST_DATE) AS FIRST_DATE, TRUNC(SYSDATE) AS LAST_DATE
		    FROM POST
		),
		INTER AS (
		    SELECT
		        FIRST_DATE + ((LEVEL -1 )*(LAST_DATE - FIRST_DATE) / 29) AS POINT_DATE
		    FROM DATE_RANGE
		    CONNECT BY LEVEL &lt;=30
		)
		SELECT
		    TO_CHAR(POINT_DATE, 'MM.DD') AS LABEL,
		    (SELECT COUNT(*) FROM POST WHERE POST_DATE &lt;= POINT_DATE) AS VALUE
		FROM INTER
		ORDER BY POINT_DATE
	</select>
	<select id="cfStatistic3" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		SELECT COUNT(*) AS VALUE, C.COMMUNITY_NAME AS LABEL 
		FROM POST P
		LEFT JOIN COMMUNITY C ON P.COMMUNITY_ID=C.COMMUNITY_ID
		GROUP BY C.COMMUNITY_NAME
		ORDER BY VALUE DESC
	</select>
	<select id="cfStatistic4" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT TRUNC(SYSDATE) - LEVEL + 1 AS TARGET_DATE
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 30
		)
		SELECT
		    TO_CHAR(DR.TARGET_DATE, 'MM.DD') AS LABEL,
		    NVL((SELECT COUNT(*) FROM POST_COMMENTS WHERE TRUNC(POST_COMMENTS_DATE) = DR.TARGET_DATE),0) AS VALUE
		FROM DATE_RANGE DR
		ORDER BY DR.TARGET_DATE
	</select>
	<select id="cfStatistic5" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT MIN(POST_COMMENTS_DATE) AS FIRST_DATE, TRUNC(SYSDATE) AS LAST_DATE
		    FROM POST_COMMENTS
		),
		INTER AS (
		    SELECT
		        FIRST_DATE + ((LEVEL -1 )*(LAST_DATE - FIRST_DATE) / 29) AS POINT_DATE
		    FROM DATE_RANGE
		    CONNECT BY LEVEL &lt;=30
		)
		SELECT
		    TO_CHAR(POINT_DATE, 'MM.DD') AS LABEL,
		    (SELECT COUNT(*) FROM POST_COMMENTS WHERE POST_COMMENTS_DATE &lt;= POINT_DATE) AS VALUE
		FROM INTER
		ORDER BY POINT_DATE
	</select>
	<select id="cfStatistic6" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH TIME_RANGE AS (
		    SELECT LEVEL - 1 AS HOUR_START
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 8
		)
		SELECT
		    TO_CHAR(TIME_RANGE.HOUR_START * 3, 'FM00') || ':00 - ' ||
		    TO_CHAR((TIME_RANGE.HOUR_START + 1) * 3, 'FM00') || ':00' AS LABEL,
		    NVL((
		        SELECT COUNT(*)
		        FROM POST
		        WHERE TO_NUMBER(TO_CHAR(POST_DATE, 'HH24')) >= TIME_RANGE.HOUR_START * 3
		        AND TO_NUMBER(TO_CHAR(POST_DATE, 'HH24')) &lt; (TIME_RANGE.HOUR_START + 1) * 3
		    ), 0) AS VALUE
		FROM TIME_RANGE
		ORDER BY TIME_RANGE.HOUR_START
	</select>
	<select id="cfStatistic7" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT TRUNC(SYSDATE) - LEVEL + 1 AS TARGET_DATE
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 30
		)
		SELECT
		    TO_CHAR(DR.TARGET_DATE, 'MM.DD') AS LABEL,
		    NVL((SELECT COUNT(*) FROM FEED WHERE TRUNC(FEED_DATE) = DR.TARGET_DATE),0) AS VALUE
		FROM DATE_RANGE DR
		ORDER BY DR.TARGET_DATE
	</select>
	<select id="cfStatistic8" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT MIN(FEED_DATE) AS FIRST_DATE, TRUNC(SYSDATE) AS LAST_DATE
		    FROM FEED
		),
		INTER AS (
		    SELECT
		        FIRST_DATE + ((LEVEL -1 )*(LAST_DATE - FIRST_DATE) / 29) AS POINT_DATE
		    FROM DATE_RANGE
		    CONNECT BY LEVEL &lt;=30
		)
		SELECT
		    TO_CHAR(POINT_DATE, 'MM.DD') AS LABEL,
		    (SELECT COUNT(*) FROM FEED WHERE FEED_DATE &lt;= POINT_DATE) AS VALUE
		FROM INTER
		ORDER BY POINT_DATE
	</select>
	<select id="cfStatistic9" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT TRUNC(SYSDATE) - LEVEL + 1 AS TARGET_DATE
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 30
		)
		SELECT
		    TO_CHAR(DR.TARGET_DATE, 'MM.DD') AS LABEL,
		    NVL((SELECT COUNT(*) FROM FEED_COMMENTS WHERE TRUNC(FEED_COMMENTS_DATE) = DR.TARGET_DATE),0) AS VALUE
		FROM DATE_RANGE DR
		ORDER BY DR.TARGET_DATE
	</select>
	<select id="cfStatistic10" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT MIN(FEED_COMMENTS_DATE) AS FIRST_DATE, TRUNC(SYSDATE) AS LAST_DATE
		    FROM FEED_COMMENTS
		),
		INTER AS (
		    SELECT
		        FIRST_DATE + ((LEVEL -1 )*(LAST_DATE - FIRST_DATE) / 29) AS POINT_DATE
		    FROM DATE_RANGE
		    CONNECT BY LEVEL &lt;=30
		)
		SELECT
		    TO_CHAR(POINT_DATE, 'MM.DD') AS LABEL,
		    (SELECT COUNT(*) FROM FEED_COMMENTS WHERE FEED_COMMENTS_DATE &lt;= POINT_DATE) AS VALUE
		FROM INTER
		ORDER BY POINT_DATE
	</select>
	<select id="cfStatistic11" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH TIME_RANGE AS (
		    SELECT LEVEL - 1 AS HOUR_START
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 8
		)
		SELECT
		    TO_CHAR(TIME_RANGE.HOUR_START * 3, 'FM00') || ':00 - ' ||
		    TO_CHAR((TIME_RANGE.HOUR_START + 1) * 3, 'FM00') || ':00' AS LABEL,
		    NVL((
		        SELECT COUNT(*)
		        FROM FEED
		        WHERE TO_NUMBER(TO_CHAR(FEED_DATE, 'HH24')) >= TIME_RANGE.HOUR_START * 3
		        AND TO_NUMBER(TO_CHAR(FEED_DATE, 'HH24')) &lt; (TIME_RANGE.HOUR_START + 1) * 3
		    ), 0) AS VALUE
		FROM TIME_RANGE
		ORDER BY TIME_RANGE.HOUR_START
	</select>
	<select id="cfStatistic12" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS (
		    SELECT TRUNC(SYSDATE) - LEVEL + 1 AS TARGET_DATE
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 30
		)
		SELECT
		    TO_CHAR(DR.TARGET_DATE, 'MM.DD') AS LABEL,
		    NVL((SELECT COUNT(*) FROM FEED WHERE TRUNC(FEED_DATE) = DR.TARGET_DATE), 0) +
		    NVL((SELECT COUNT(*) FROM POST WHERE TRUNC(POST_DATE) = DR.TARGET_DATE), 0) AS VALUE
		FROM DATE_RANGE DR
		ORDER BY DR.TARGET_DATE
	</select>
	<select id="cfStatistic13" resultType="com.tech.whale.admin.dto.AdminLVDataDto">
		WITH DATE_RANGE AS(
		    SELECT MIN(FEED_DATE) AS FIRST_DATE, TRUNC(SYSDATE) AS LAST_DATE
		    FROM FEED
		),
		INTER AS (
		    SELECT
		        FIRST_DATE + ((LEVEL -1 )*(LAST_DATE - FIRST_DATE) / 29) AS POINT_DATE
		    FROM DATE_RANGE
		    CONNECT BY LEVEL &lt;=30
		)
		SELECT
		    TO_CHAR(POINT_DATE, 'MM.DD') AS LABEL,
		    (SELECT COUNT(*) FROM FEED WHERE FEED_DATE &lt;= POINT_DATE) +
		    (SELECT COUNT(*) FROM POST WHERE POST_DATE &lt;= POINT_DATE) AS VALUE
		FROM INTER
		ORDER BY POINT_DATE
	</select>
	
</mapper>