<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tech.whale.admin.dao.AdminIDao">

	<sql id="includeUserCnt">
	    <choose>
	        <when test="param2 == 1">
	            WHERE (USER_ID LIKE '%' || #{sk} || '%')
	        </when>
	        <when test="param2 == 2">
	            WHERE (USER_EMAIL LIKE '%' || #{sk} || '%')
	        </when>
	        <otherwise>
	        </otherwise>
	    </choose>
	</sql>
	<sql id="includeUserList">
	    <choose>
	        <when test="param4 == 1">
	            WHERE (UI.USER_ID LIKE '%' || #{sk} || '%')
	            
	        </when>
	        <when test="param4 == 2">
	            WHERE (UI.USER_EMAIL LIKE '%' || #{sk} || '%')
	        </when>
	        <otherwise>
	        </otherwise>
	    </choose>
	</sql>
	
	


	<select id="selectUserCnt" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM USER_INFO
        <include refid="includeUserCnt" />
    </select>
    
    <select id="adminUserList" resultType="com.tech.whale.admin.dto.AdminUserInfoDto">
	    SELECT *
		FROM (
		    SELECT 
		        UI.USER_ID,
		        UI.USER_IMAGE_URL,
		        UI.USER_NICKNAME,
		        UI.USER_EMAIL,
		        UI.USER_ACCESS_ID,
		        UI.USER_STATUS,
		        UI.USER_DATE,
		        (SELECT COUNT(DISTINCT p.POST_ID) FROM POST p WHERE p.USER_ID = UI.USER_ID) AS POST_COUNT,
		        (SELECT COUNT(DISTINCT f.FEED_ID) FROM FEED f WHERE f.USER_ID = UI.USER_ID) AS FEED_COUNT,
		        (
		            SELECT COUNT(DISTINCT pc.POST_COMMENTS_ID) 
		            FROM POST_COMMENTS pc 
		            WHERE pc.USER_ID = UI.USER_ID
		        ) +
		        (
		            SELECT COUNT(DISTINCT fc.FEED_COMMENTS_ID) 
		            FROM FEED_COMMENTS fc 
		            WHERE fc.USER_ID = UI.USER_ID
		        ) AS COMMENTS_COUNT,
		        ROW_NUMBER() OVER (ORDER BY UI.USER_ID) AS RNUM
		    FROM 
		        USER_INFO UI
		    <include refid="includeUserList" />
		    GROUP BY 
		        UI.USER_ID, UI.USER_IMAGE_URL, UI.USER_NICKNAME, UI.USER_EMAIL, UI.USER_ACCESS_ID, UI.USER_STATUS, UI.USER_DATE
		) 
		WHERE RNUM BETWEEN #{start} AND #{end}
		ORDER BY RNUM


	</select>
    
    <select id="userAccountInfoSelect" resultType="com.tech.whale.admin.dto.AdminUserInfoDto">
	    SELECT 
	    	UI.USER_ID,
	    	UI.USER_IMAGE_URL,
	        UI.USER_NICKNAME,
	        UI.USER_EMAIL,
	        UI.USER_STATUS,
	        UI.USER_DATE,
	        UI.USER_ACCESS_ID,
	        COUNT(DISTINCT P.POST_ID) AS POST_COUNT,
	        COUNT(DISTINCT PC.POST_COMMENTS_ID) AS COMMENTS_COUNT,
	        COUNT(DISTINCT F.FEED_ID) AS FEED_COUNT
	    FROM 
	        USER_INFO UI
	    LEFT JOIN 
	        POST P ON UI.USER_ID = P.USER_ID
	    LEFT JOIN 
	        POST_COMMENTS PC ON UI.USER_ID = PC.USER_ID
	    LEFT JOIN 
    		FEED F ON UI.USER_ID = F.USER_ID 
	    WHERE 
	        UI.USER_ID = #{userId}
	    GROUP BY 
	       UI.USER_ID, UI.USER_IMAGE_URL, UI.USER_NICKNAME, UI.USER_EMAIL, UI.USER_ACCESS_ID, UI.USER_DATE,UI.USER_STATUS
	</select>
	
    <select id="userAccountFeedSelect" resultType="com.tech.whale.admin.dto.AdminPFCDto">
	    SELECT *
		FROM (
		    SELECT F.*, ROW_NUMBER() OVER (ORDER BY FEED_ID DESC) AS RNUM
		    FROM FEED F
		    WHERE USER_ID = #{userId}
		)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
    <select id="userAccountPostSelect" resultType="com.tech.whale.admin.dto.AdminPFCDto">
	    SELECT *
		FROM (
		    SELECT P.*, ROW_NUMBER() OVER (ORDER BY POST_ID DESC) AS RNUM
		    FROM POST P
		    WHERE USER_ID = #{userId}
		)
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
    <select id="userAccountCommentsSelect" resultType="com.tech.whale.admin.dto.AdminPFCDto">
	    SELECT *
		FROM (
		    SELECT 
		        FC.FEED_COMMENTS_ID,
		        FC.FEED_COMMENTS_TEXT,
		        PC.POST_COMMENTS_ID,
		        PC.POST_COMMENTS_TEXT, 
		        PC.POST_COMMENTS_DATE AS COMMENTS_DATE,
		        ROW_NUMBER() OVER (ORDER BY PC.POST_COMMENTS_DATE DESC) AS RNUM
		    FROM 
		        POST_COMMENTS PC
		    LEFT JOIN 
		        FEED_COMMENTS FC ON PC.POST_COMMENTS_DATE = FC.FEED_COMMENTS_DATE
		    WHERE 
		        FC.USER_ID = #{userId} OR PC.USER_ID = #{userId}
		)
		WHERE RNUM BETWEEN #{start} AND #{end}
		ORDER BY RNUM

	</select>
	
	<select id="selectPostCnt" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM POST WHERE USER_ID=#{userId}
    </select>
	<select id="selectFeedCnt" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM FEED WHERE USER_ID=#{userId}
    </select>
	<select id="selectCommentsCnt" parameterType="map" resultType="int">
        SELECT 
	    COUNT(PC.POST_COMMENTS_DATE)
		FROM 
		    POST_COMMENTS PC
		LEFT JOIN 
		    FEED_COMMENTS FC ON PC.POST_COMMENTS_DATE  = FC.FEED_COMMENTS_DATE
		WHERE 
		    FC.USER_ID = #{userId} OR PC.USER_ID = #{userId}
    </select>
    
    <update id="userNicknameModyfy" >
    	UPDATE USER_INFO SET USER_NICKNAME = #{userNickname}
    	WHERE USER_ID = #{userId}
    </update>
    <update id="userImgDelete" >
    	UPDATE USER_INFO SET USER_IMAGE_URL = 'PRO.PNG'
    	WHERE USER_ID = #{userId} AND USER_IMAGE_URL = #{userImgUrl}
    </update>
    
    
    <sql id="accessIdAdd">
	    <choose>
	        <when test="userAccess == 1">
	            INSERT INTO ADMIN_INFO VALUES(ADMIN_INFO_SEQ.NEXTVAL, #{userId}, #{userAccess} )
	        </when>
	        <when test="userAccess == 2">
	            INSERT INTO ADVERTISER_INFO VALUES(ADVERTISER_INFO_SEQ.NEXTVAL, #{userId}, #{companyName}, #{userAccess} )
	        </when>
	        <when test="userAccess == 3">
	            INSERT INTO OFFICIAL_INFO VALUES(OFFICIAL_INFO_SEQ.NEXTVAL, #{userId}, #{companyName}, #{userAccess} )
	        </when>
	        <otherwise>
	        </otherwise>
	    </choose>
	</sql>
    
    
    <insert id="accessInfoAdd">
    	<include refid="accessIdAdd" />
    </insert>
    <insert id="userAccessLog">
    	INSERT INTO ACCESS_LOG VALUES(ACCESS_LOG_SEQ.NEXTVAL, #{userId}, #{accessReason}, #{userAccess}, SYSDATE )
    </insert>
    
    <update id="userInfoAccessModify" >
    	UPDATE USER_INFO SET USER_ACCESS_ID = #{userAccess} WHERE USER_ID = #{userId}
    </update>
    
    <sql id="accessIdDelete">
	    <choose>
	        <when test="userAccessNow == 1">
	            DELETE FROM ADMIN_INFO WHERE USER_ID = #{userId}
	        </when>
	        <when test="userAccessNow == 2">
	            DELETE FROM ADVERTISER_INFO WHERE USER_ID = #{userId}
	        </when>
	        <when test="userAccessNow == 3">
	            DELETE FROM OFFICIAL_INFO WHERE USER_ID = #{userId}
	        </when>
	        <otherwise>
	        </otherwise>
	    </choose>
	</sql>
    
    <delete id="userAccessDrop" >
    	<include refid="accessIdDelete" />
    </delete>


</mapper>